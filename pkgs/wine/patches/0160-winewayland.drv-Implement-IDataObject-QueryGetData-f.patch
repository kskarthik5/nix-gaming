From 71c7d9296a80eeca32e8ec6b0f023fb67c9c137e Mon Sep 17 00:00:00 2001
From: Alexandros Frantzis <alexandros.frantzis@collabora.com>
Date: Wed, 22 Sep 2021 17:30:21 +0300
Subject: [PATCH 160/170] winewayland.drv: Implement IDataObject::QueryGetData
 for data offers.

Check if for any of the available mime types of the associated data
offer we support converting from that mime type to the requested Windows
clipboard format.

Signed-off-by: Alexandros Frantzis <alexandros.frantzis@collabora.com>
---
 dlls/winewayland.drv/unixlib.h                | 16 +++++
 dlls/winewayland.drv/wayland_data_device.c    | 62 +++++++++++++++++++
 .../winewayland.drv/wayland_data_device_dll.c | 46 +++++++++++++-
 dlls/winewayland.drv/waylanddrv.h             |  2 +
 dlls/winewayland.drv/waylanddrv_main.c        |  2 +
 5 files changed, 127 insertions(+), 1 deletion(-)

diff --git a/dlls/winewayland.drv/unixlib.h b/dlls/winewayland.drv/unixlib.h
index 3200e83dc6e..ee2177a2f42 100644
--- a/dlls/winewayland.drv/unixlib.h
+++ b/dlls/winewayland.drv/unixlib.h
@@ -31,6 +31,8 @@ enum waylanddrv_unix_func
 {
     waylanddrv_unix_func_init,
     waylanddrv_unix_func_clipboard_message,
+    waylanddrv_unix_func_data_offer_accept_format,
+    waylanddrv_unix_func_data_offer_import_format,
     waylanddrv_unix_func_count,
 };
 
@@ -48,6 +50,20 @@ struct waylanddrv_unix_clipboard_message_params
     LPARAM lparam;
 };
 
+struct waylanddrv_unix_data_offer_accept_format_params
+{
+    PTR32 data_offer;
+    UINT format;
+};
+
+struct waylanddrv_unix_data_offer_import_format_params
+{
+    PTR32 data_offer;
+    UINT format;
+    PTR32 data;
+    UINT size;
+};
+
 /* driver client callbacks exposed with KernelCallbackTable interface */
 enum waylanddrv_client_func
 {
diff --git a/dlls/winewayland.drv/wayland_data_device.c b/dlls/winewayland.drv/wayland_data_device.c
index 86f57024680..44544cb9914 100644
--- a/dlls/winewayland.drv/wayland_data_device.c
+++ b/dlls/winewayland.drv/wayland_data_device.c
@@ -24,6 +24,10 @@
 
 #include "config.h"
 
+#include "ntstatus.h"
+#define WIN32_NO_STATUS
+#define NONAMELESSUNION
+
 #include "waylanddrv.h"
 
 #include "wine/debug.h"
@@ -49,6 +53,7 @@ struct wayland_data_offer
     struct wl_array types;
     uint32_t source_actions;
     uint32_t action;
+    const char *accepted_mime_type;
 };
 
 /* Normalize the mime type by skipping inconsequential characters, such as
@@ -676,3 +681,60 @@ void wayland_data_device_ensure_clipboard_window(struct wayland *wayland)
             ULongToHandle(WAYLANDDRV_CLIENT_CALL(create_clipboard_window, NULL, 0));
     }
 }
+
+NTSTATUS waylanddrv_unix_data_offer_accept_format(void *arg)
+{
+    struct waylanddrv_unix_data_offer_accept_format_params *p = arg;
+    struct wayland_data_offer *data_offer = UIntToPtr(p->data_offer);
+    struct wayland_data_device_format *format;
+
+    TRACE("data_offer=%p clipboard_format=%d\n", data_offer, p->format);
+
+    format = wayland_data_device_format_for_clipboard_format(p->format,
+                                                             &data_offer->types);
+    if (format)
+    {
+        TRACE("found offer %s for clipboard format %u\n",
+              format->mime_type, format->clipboard_format);
+        data_offer->accepted_mime_type = format->mime_type;
+        return STATUS_SUCCESS;
+    }
+
+    return STATUS_UNSUCCESSFUL;
+}
+
+NTSTATUS waylanddrv_unix_data_offer_import_format(void *arg)
+{
+    struct waylanddrv_unix_data_offer_import_format_params *p = arg;
+    struct wayland_data_offer *data_offer = UIntToPtr(p->data_offer);
+    struct wayland_data_device_format *format;
+
+    TRACE("data_offer=%p clipboard_format=%d\n", data_offer, p->format);
+
+    format = wayland_data_device_format_for_clipboard_format(p->format,
+                                                             &data_offer->types);
+    if (format)
+    {
+        void *data, *vdata = NULL;
+        size_t size;
+        SIZE_T vsize;
+
+        if (!(data = wayland_data_offer_import_format(data_offer, format, &size)))
+            return STATUS_UNSUCCESSFUL;
+        vsize = size;
+        if (NtAllocateVirtualMemory(GetCurrentProcess(), (void **)&vdata,
+                                    zero_bits(), &vsize, MEM_COMMIT, PAGE_READWRITE) ||
+            !vdata)
+        {
+            free(data);
+            return STATUS_UNSUCCESSFUL;
+        }
+        memcpy(vdata, data, size);
+        p->data = PtrToUint(vdata);
+        p->size = size;
+        free(data);
+        return STATUS_SUCCESS;
+    }
+
+    return STATUS_UNSUCCESSFUL;
+}
diff --git a/dlls/winewayland.drv/wayland_data_device_dll.c b/dlls/winewayland.drv/wayland_data_device_dll.c
index 6db9723e6f0..325c052c82a 100644
--- a/dlls/winewayland.drv/wayland_data_device_dll.c
+++ b/dlls/winewayland.drv/wayland_data_device_dll.c
@@ -121,9 +121,38 @@ static HRESULT WINAPI dataOfferDataObject_GetData(IDataObject *data_object,
                                                   FORMATETC *format_etc,
                                                   STGMEDIUM *medium)
 {
+    HRESULT hr;
+    struct waylanddrv_unix_data_offer_import_format_params params;
+    void *data;
+
     TRACE("(%p, %p, %p)\n", data_object, format_etc, medium);
 
-    return E_UNEXPECTED;
+    hr = IDataObject_QueryGetData(data_object, format_etc);
+    if (!SUCCEEDED(hr))
+        return hr;
+
+    params.data_offer = PtrToUint(data_object);
+    params.format = format_etc->cfFormat;
+    params.data = 0;
+    params.size = 0;
+
+    if (WAYLANDDRV_UNIX_CALL(data_offer_import_format, &params) != 0 || !params.data)
+        return E_UNEXPECTED;
+
+    data = UIntToPtr(params.data);
+
+    medium->hGlobal = GlobalAlloc(GMEM_FIXED | GMEM_ZEROINIT, params.size);
+    if (medium->hGlobal == NULL)
+        return E_OUTOFMEMORY;
+    memcpy(GlobalLock(medium->hGlobal), data, params.size);
+    GlobalUnlock(medium->hGlobal);
+
+    medium->tymed = TYMED_HGLOBAL;
+    medium->pUnkForRelease = 0;
+
+    VirtualFree(data, params.size, MEM_RELEASE);
+
+    return S_OK;
 }
 
 static HRESULT WINAPI dataOfferDataObject_GetDataHere(IDataObject *data_object,
@@ -137,10 +166,25 @@ static HRESULT WINAPI dataOfferDataObject_GetDataHere(IDataObject *data_object,
 static HRESULT WINAPI dataOfferDataObject_QueryGetData(IDataObject *data_object,
                                                        FORMATETC *format_etc)
 {
+    struct waylanddrv_unix_data_offer_accept_format_params params;
+
     TRACE("(%p, %p={.tymed=0x%x, .dwAspect=%d, .cfFormat=%d}\n",
           data_object, format_etc, format_etc->tymed, format_etc->dwAspect,
           format_etc->cfFormat);
 
+    if (format_etc->tymed && !(format_etc->tymed & TYMED_HGLOBAL))
+    {
+        FIXME("only HGLOBAL medium types supported right now\n");
+        return DV_E_TYMED;
+    }
+
+    params.data_offer = PtrToUint(data_object);
+    params.format = format_etc->cfFormat;
+
+    if (WAYLANDDRV_UNIX_CALL(data_offer_accept_format, &params) == 0)
+        return S_OK;
+
+    TRACE("didn't find offer for clipboard format %u\n", format_etc->cfFormat);
     return DV_E_FORMATETC;
 }
 
diff --git a/dlls/winewayland.drv/waylanddrv.h b/dlls/winewayland.drv/waylanddrv.h
index b3a165b390f..0ecab21c4f2 100644
--- a/dlls/winewayland.drv/waylanddrv.h
+++ b/dlls/winewayland.drv/waylanddrv.h
@@ -746,6 +746,8 @@ static inline HWND get_focus(void)
 NTSTATUS waylanddrv_client_call(enum waylanddrv_client_func func, const void *params,
                                 ULONG size) DECLSPEC_HIDDEN;
 NTSTATUS waylanddrv_unix_clipboard_message(void *arg) DECLSPEC_HIDDEN;
+NTSTATUS waylanddrv_unix_data_offer_accept_format(void *arg) DECLSPEC_HIDDEN;
+NTSTATUS waylanddrv_unix_data_offer_import_format(void *arg) DECLSPEC_HIDDEN;
 
 /**********************************************************************
  *          USER driver functions
diff --git a/dlls/winewayland.drv/waylanddrv_main.c b/dlls/winewayland.drv/waylanddrv_main.c
index 82f1df8ce42..1d0c202ce5b 100644
--- a/dlls/winewayland.drv/waylanddrv_main.c
+++ b/dlls/winewayland.drv/waylanddrv_main.c
@@ -203,6 +203,8 @@ const unixlib_entry_t __wine_unix_call_funcs[] =
 {
     waylanddrv_unix_init,
     waylanddrv_unix_clipboard_message,
+    waylanddrv_unix_data_offer_accept_format,
+    waylanddrv_unix_data_offer_import_format,
 };
 
 C_ASSERT(ARRAYSIZE(__wine_unix_call_funcs) == waylanddrv_unix_func_count);
-- 
2.36.1

