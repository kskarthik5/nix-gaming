From db607ad0f569e9730ae014de35c78a669cbac935 Mon Sep 17 00:00:00 2001
From: Alexandros Frantzis <alexandros.frantzis@collabora.com>
Date: Thu, 18 Nov 2021 14:33:51 +0200
Subject: [PATCH 063/170] winewayland.drv: Disallow commits to unmappable
 surfaces.

Wayland surfaces without a role, which we use for hidden windows, are
not mappable, so any commits on them are never going to be visible.

Signed-off-by: Alexandros Frantzis <alexandros.frantzis@collabora.com>
---
 dlls/winewayland.drv/wayland_surface.c | 9 ++++++++-
 dlls/winewayland.drv/window.c          | 3 ++-
 2 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/dlls/winewayland.drv/wayland_surface.c b/dlls/winewayland.drv/wayland_surface.c
index ffd2bb3c911..a8401f33843 100644
--- a/dlls/winewayland.drv/wayland_surface.c
+++ b/dlls/winewayland.drv/wayland_surface.c
@@ -141,7 +141,8 @@ struct wayland_surface *wayland_surface_create_plain(struct wayland *wayland)
         goto err;
 
     wl_surface_set_user_data(surface->wl_surface, surface);
-    surface->drawing_allowed = TRUE;
+    /* Plain surfaces are unmappable, so don't draw on them. */
+    surface->drawing_allowed = FALSE;
 
     surface->ref = 1;
     surface->role = WAYLAND_SURFACE_ROLE_NONE;
@@ -167,6 +168,8 @@ void wayland_surface_make_toplevel(struct wayland_surface *surface,
 
     TRACE("surface=%p parent=%p\n", surface, parent);
 
+    surface->drawing_allowed = TRUE;
+
     surface->xdg_surface =
         xdg_wm_base_get_xdg_surface(wayland->xdg_wm_base, surface->wl_surface);
     if (!surface->xdg_surface)
@@ -213,6 +216,8 @@ void wayland_surface_make_subsurface(struct wayland_surface *surface,
 
     TRACE("surface=%p parent=%p\n", surface, parent);
 
+    surface->drawing_allowed = TRUE;
+
     surface->parent = wayland_surface_ref(parent);
     surface->wl_subsurface =
         wl_subcompositor_get_subsurface(wayland->wl_subcompositor,
@@ -245,6 +250,8 @@ void wayland_surface_clear_role(struct wayland_surface *surface)
 {
     TRACE("surface=%p hwnd=%p\n", surface, surface->hwnd);
 
+    surface->drawing_allowed = FALSE;
+
     if (surface->xdg_toplevel)
     {
         xdg_toplevel_destroy(surface->xdg_toplevel);
diff --git a/dlls/winewayland.drv/window.c b/dlls/winewayland.drv/window.c
index 7af96b1103a..383f34cadd8 100644
--- a/dlls/winewayland.drv/window.c
+++ b/dlls/winewayland.drv/window.c
@@ -793,7 +793,8 @@ static void wayland_win_data_update_wayland_surface_state(struct wayland_win_dat
 
     wayland_surface_reconfigure_apply(wsurface);
 
-    wsurface->drawing_allowed = TRUE;
+    if (wsurface->xdg_toplevel || wsurface->wl_subsurface)
+        wsurface->drawing_allowed = TRUE;
 
     wayland_mutex_unlock(&wsurface->mutex);
 }
-- 
2.36.1

