From da1a70de1d27cb533f560d7e2846acaa41b1afa0 Mon Sep 17 00:00:00 2001
From: Alexandros Frantzis <alexandros.frantzis@collabora.com>
Date: Thu, 23 Sep 2021 13:02:14 +0300
Subject: [PATCH 164/170] winewayland.drv: Handle the wl_data_device::leave
 event.

Relay the event to the IDropTarget at the current drag-and-drop
position.

Signed-off-by: Alexandros Frantzis <alexandros.frantzis@collabora.com>
---
 dlls/winewayland.drv/unixlib.h                |  1 +
 dlls/winewayland.drv/wayland_data_device.c    | 22 +++++++++++++++++++
 .../winewayland.drv/wayland_data_device_dll.c | 20 +++++++++++++++++
 3 files changed, 43 insertions(+)

diff --git a/dlls/winewayland.drv/unixlib.h b/dlls/winewayland.drv/unixlib.h
index 99b55bede0a..5a3ead87653 100644
--- a/dlls/winewayland.drv/unixlib.h
+++ b/dlls/winewayland.drv/unixlib.h
@@ -94,6 +94,7 @@ struct waylanddrv_client_load_cursor_params
 enum waylanddrv_client_dnd_event
 {
     CLIENT_DND_EVENT_ENTER,
+    CLIENT_DND_EVENT_LEAVE,
 };
 
 struct waylanddrv_client_dnd_params
diff --git a/dlls/winewayland.drv/wayland_data_device.c b/dlls/winewayland.drv/wayland_data_device.c
index f05e3070b0b..72ebd4b6e63 100644
--- a/dlls/winewayland.drv/wayland_data_device.c
+++ b/dlls/winewayland.drv/wayland_data_device.c
@@ -385,8 +385,30 @@ static void data_device_enter(void *data, struct wl_data_device *wl_data_device,
 
 static void data_device_leave(void *data, struct wl_data_device *wl_data_device)
 {
+    struct waylanddrv_client_dnd_params params;
     struct wayland_data_device *data_device = data;
+    POINT point;
+
+    TRACE("surface=%p hwnd=%p\n",
+          data_device->dnd_surface,
+          data_device->dnd_surface ? data_device->dnd_surface->hwnd : 0);
+
+    if (!data_device->dnd_wl_data_offer || !data_device->dnd_surface)
+        goto out;
+
+    wayland_surface_coords_to_screen(data_device->dnd_surface,
+                                     data_device->dnd_x, data_device->dnd_y,
+                                     &point.x, &point.y);
 
+    params.event = CLIENT_DND_EVENT_LEAVE;
+    params.hwnd = HandleToULong(data_device->dnd_surface->hwnd);
+    params.point = point;
+    params.drop_effect = 0;
+    params.data_object = 0;
+
+    WAYLANDDRV_CLIENT_CALL(dnd, &params, sizeof(params));
+
+out:
     wayland_data_device_destroy_dnd_data_offer(data_device);
 }
 
diff --git a/dlls/winewayland.drv/wayland_data_device_dll.c b/dlls/winewayland.drv/wayland_data_device_dll.c
index 679081260e6..b51eb2ed9bd 100644
--- a/dlls/winewayland.drv/wayland_data_device_dll.c
+++ b/dlls/winewayland.drv/wayland_data_device_dll.c
@@ -213,6 +213,24 @@ static NTSTATUS WINAPI waylanddrv_client_dnd_enter(void *params, ULONG size)
     return STATUS_SUCCESS;
 }
 
+static NTSTATUS WINAPI waylanddrv_client_dnd_leave(void *params, ULONG size)
+{
+    struct waylanddrv_client_dnd_params *p = params;
+    IDropTarget *drop_target;
+    HRESULT hr;
+
+    drop_target = drop_target_from_window_point(ULongToHandle(p->hwnd), p->point);
+    if (!drop_target)
+        return STATUS_UNSUCCESSFUL;
+
+    hr = IDropTarget_DragLeave(drop_target);
+    IDropTarget_Release(drop_target);
+    if (FAILED(hr))
+        return STATUS_UNSUCCESSFUL;
+
+    return STATUS_SUCCESS;
+}
+
 NTSTATUS WINAPI waylanddrv_client_dnd(void *params, ULONG size)
 {
     struct waylanddrv_client_dnd_params *p = params;
@@ -220,6 +238,8 @@ NTSTATUS WINAPI waylanddrv_client_dnd(void *params, ULONG size)
     switch (p->event) {
     case CLIENT_DND_EVENT_ENTER:
         return waylanddrv_client_dnd_enter(params, size);
+    case CLIENT_DND_EVENT_LEAVE:
+        return waylanddrv_client_dnd_leave(params, size);
     }
 
     return STATUS_UNSUCCESSFUL;
-- 
2.36.1

