From 6531b6ec1f159e20f4cf36f57dc9c33aa9511bd2 Mon Sep 17 00:00:00 2001
From: Alexandros Frantzis <alexandros.frantzis@collabora.com>
Date: Tue, 7 Jun 2022 16:07:46 +0300
Subject: [PATCH 022/170] winewayland.drv: Add helper to convert WCHAR string
 to LONG.

Signed-off-by: Alexandros Frantzis <alexandros.frantzis@collabora.com>
---
 dlls/winewayland.drv/unicode.c    | 53 +++++++++++++++++++++++++++++++
 dlls/winewayland.drv/waylanddrv.h |  1 +
 2 files changed, 54 insertions(+)

diff --git a/dlls/winewayland.drv/unicode.c b/dlls/winewayland.drv/unicode.c
index 7cce78573a7..ce57f4fa8d1 100644
--- a/dlls/winewayland.drv/unicode.c
+++ b/dlls/winewayland.drv/unicode.c
@@ -103,3 +103,56 @@ size_t ascii_to_unicode_z(WCHAR *dst, size_t dst_max_chars,
     dst[len] = 0;
     return len + 1;
 }
+
+/**********************************************************************
+ *          unicode_z_to_long
+ *
+ *  Converts a unicode string to a LONG using the provided base.
+ */
+LONG unicode_z_to_long(LPCWSTR s, LPWSTR *end, INT base)
+{
+    BOOL negative = FALSE, empty = TRUE;
+    LONG ret = 0;
+
+    if (base < 0 || base == 1 || base > 36) return 0;
+    if (end) *end = (WCHAR *)s;
+    while (*s == ' ' || *s == '\t') s++;
+
+    if (*s == '-')
+    {
+        negative = TRUE;
+        s++;
+    }
+    else if (*s == '+') s++;
+
+    if ((base == 0 || base == 16) && s[0] == '0' && (s[1] == 'x' || s[1] == 'X'))
+    {
+        base = 16;
+        s += 2;
+    }
+    if (base == 0) base = s[0] != '0' ? 10 : 8;
+
+    while (*s)
+    {
+        int v;
+
+        if ('0' <= *s && *s <= '9') v = *s - '0';
+        else if ('A' <= *s && *s <= 'Z') v = *s - 'A' + 10;
+        else if ('a' <= *s && *s <= 'z') v = *s - 'a' + 10;
+        else break;
+        if (v >= base) break;
+        if (negative) v = -v;
+        s++;
+        empty = FALSE;
+
+        if (!negative && (ret > MAXLONG / base || ret * base > MAXLONG - v))
+            ret = MAXLONG;
+        else if (negative && (ret < (LONG)MINLONG / base || ret * base < (LONG)(MINLONG - v)))
+            ret = MINLONG;
+        else
+            ret = ret * base + v;
+    }
+
+    if (end && !empty) *end = (WCHAR *)s;
+    return ret;
+}
diff --git a/dlls/winewayland.drv/waylanddrv.h b/dlls/winewayland.drv/waylanddrv.h
index bd17a275891..463207a8cec 100644
--- a/dlls/winewayland.drv/waylanddrv.h
+++ b/dlls/winewayland.drv/waylanddrv.h
@@ -193,6 +193,7 @@ size_t unicode_to_ascii_maybe_z(char *dst, size_t dst_max_chars,
                                 const WCHAR *src, size_t src_max_chars) DECLSPEC_HIDDEN;
 size_t ascii_to_unicode_z(WCHAR *dst, size_t dst_max_chars,
                           const char *src, size_t src_max_chars) DECLSPEC_HIDDEN;
+LONG unicode_z_to_long(LPCWSTR s, LPWSTR *end, INT base) DECLSPEC_HIDDEN;
 
 /**********************************************************************
  *          USER32 helpers
-- 
2.36.1

