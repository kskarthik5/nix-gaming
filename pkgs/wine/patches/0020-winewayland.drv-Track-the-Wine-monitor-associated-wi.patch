From 1f01411d8054340ef667613e718bbebf3e1d9aec Mon Sep 17 00:00:00 2001
From: Alexandros Frantzis <alexandros.frantzis@collabora.com>
Date: Mon, 8 Nov 2021 13:23:34 +0200
Subject: [PATCH 020/170] winewayland.drv: Track the Wine monitor associated
 with a Wayland output.

Signed-off-by: Alexandros Frantzis <alexandros.frantzis@collabora.com>
---
 dlls/winewayland.drv/display.c        | 14 ++++++++
 dlls/winewayland.drv/wayland_output.c | 51 +++++++++++++++++++++++++++
 dlls/winewayland.drv/waylanddrv.h     |  4 +++
 dlls/winewayland.drv/window.c         |  1 +
 4 files changed, 70 insertions(+)

diff --git a/dlls/winewayland.drv/display.c b/dlls/winewayland.drv/display.c
index f199e1c1373..1b71bc48aab 100644
--- a/dlls/winewayland.drv/display.c
+++ b/dlls/winewayland.drv/display.c
@@ -171,5 +171,19 @@ void WAYLAND_UpdateDisplayDevices(const struct gdi_device_manager *device_manage
         output_id++;
     }
 
+    /* Set wine name in wayland_output so that we can look it up. */
+    output_id = 0;
+    wl_list_for_each(output, &wayland->output_list, link)
+    {
+        char buf[16];
+        int len;
+        len = snprintf(buf, sizeof(buf), "\\\\.\\DISPLAY%d", output_id + 1);
+        if (len > sizeof(buf)) len = sizeof(buf);
+        ascii_to_unicode_z(output->wine_name, ARRAY_SIZE(output->wine_name), buf, len);
+        TRACE("name=%s wine_name=%s\n",
+              output->name, wine_dbgstr_w(output->wine_name));
+        output_id++;
+    }
+
     wayland_process_release();
 }
diff --git a/dlls/winewayland.drv/wayland_output.c b/dlls/winewayland.drv/wayland_output.c
index 1a5f8c7b434..50ba5119b64 100644
--- a/dlls/winewayland.drv/wayland_output.c
+++ b/dlls/winewayland.drv/wayland_output.c
@@ -311,6 +311,8 @@ static void wayland_output_done(struct wayland_output *output)
 
     if (wayland_is_process(output->wayland))
         wayland_init_display_devices();
+    else
+        wayland_update_outputs_from_process(output->wayland);
 }
 
 static void output_handle_geometry(void *data, struct wl_output *wl_output,
@@ -496,3 +498,52 @@ void wayland_output_use_xdg_extension(struct wayland_output *output)
     zxdg_output_v1_add_listener(output->zxdg_output_v1, &zxdg_output_v1_listener,
                                 output);
 }
+
+/**********************************************************************
+ *          wayland_update_outputs_from_process
+ *
+ * Update the information in the outputs of this instance, using the
+ * information in the process wayland instance.
+ */
+void wayland_update_outputs_from_process(struct wayland *wayland)
+{
+    struct wayland_output *output;
+    struct wayland_output *process_output;
+    struct wayland *process_wayland = wayland_process_acquire();
+
+    TRACE("wayland=%p process_wayland=%p\n", wayland, process_wayland);
+
+    wl_list_for_each(output, &wayland->output_list, link)
+    {
+        wl_list_for_each(process_output, &process_wayland->output_list, link)
+        {
+            if (!strcmp(output->name, process_output->name))
+            {
+                lstrcpyW(output->wine_name, process_output->wine_name);
+                break;
+            }
+        }
+    }
+
+    wayland_process_release();
+}
+
+/**********************************************************************
+ *          wayland_output_get_by_wine_name
+ *
+ *  Returns the wayland_output with the specified Wine name (or NULL
+ *  if not present).
+ */
+struct wayland_output *wayland_output_get_by_wine_name(struct wayland *wayland,
+                                                       LPCWSTR wine_name)
+{
+    struct wayland_output *output;
+
+    wl_list_for_each(output, &wayland->output_list, link)
+    {
+        if (!wcsicmp(wine_name, output->wine_name))
+            return output;
+    }
+
+    return NULL;
+}
diff --git a/dlls/winewayland.drv/waylanddrv.h b/dlls/winewayland.drv/waylanddrv.h
index eb4fae5aa44..59412fdde28 100644
--- a/dlls/winewayland.drv/waylanddrv.h
+++ b/dlls/winewayland.drv/waylanddrv.h
@@ -104,6 +104,7 @@ struct wayland_output
     int x, y;  /* position in native pixel coordinate space */
     int scale; /* wayland output scale factor for hidpi */
     char *name;
+    WCHAR wine_name[128];
     uint32_t global_id;
 };
 
@@ -165,6 +166,9 @@ BOOL wayland_output_create(struct wayland *wayland, uint32_t id, uint32_t versio
 void wayland_output_destroy(struct wayland_output *output) DECLSPEC_HIDDEN;
 void wayland_output_use_xdg_extension(struct wayland_output *output) DECLSPEC_HIDDEN;
 void wayland_notify_wine_monitor_change(void) DECLSPEC_HIDDEN;
+void wayland_update_outputs_from_process(struct wayland *wayland) DECLSPEC_HIDDEN;
+struct wayland_output *wayland_output_get_by_wine_name(struct wayland *wayland,
+                                                       LPCWSTR wine_name) DECLSPEC_HIDDEN;
 
 /**********************************************************************
  *          Misc. helpers
diff --git a/dlls/winewayland.drv/window.c b/dlls/winewayland.drv/window.c
index b0bf67b0dfb..679b9cb52f6 100644
--- a/dlls/winewayland.drv/window.c
+++ b/dlls/winewayland.drv/window.c
@@ -54,6 +54,7 @@ BOOL WAYLAND_CreateWindow(HWND hwnd)
 
 static void handle_wm_wayland_monitor_change(struct wayland *wayland)
 {
+    wayland_update_outputs_from_process(wayland);
 }
 
 /**********************************************************************
-- 
2.36.1

