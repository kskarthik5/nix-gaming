From c90e106bfbcc5cd59df8d3bc0aa80e07fcd6e153 Mon Sep 17 00:00:00 2001
From: Leandro Ribeiro <leandro.ribeiro@collabora.com>
Date: Wed, 4 May 2022 13:38:06 -0300
Subject: [PATCH 089/170] winewayland.drv: Prefer same DRM device that
 compositor is using.

When users don't specify the "DRMDevice" driver registry option, we
don't know exactly the best DRM node to open, so we try to open a random
render node. Instead, start to use the data from dma-buf feedback to try
to open the same DRM device that the compositor is using.

Signed-off-by: Leandro Ribeiro <leandro.ribeiro@collabora.com>
---
 dlls/winewayland.drv/gbm.c | 32 ++++++++++++++++++++++++++++++++
 1 file changed, 32 insertions(+)

diff --git a/dlls/winewayland.drv/gbm.c b/dlls/winewayland.drv/gbm.c
index 8123a014a59..a35f7b56bd2 100644
--- a/dlls/winewayland.drv/gbm.c
+++ b/dlls/winewayland.drv/gbm.c
@@ -34,6 +34,7 @@
 #endif
 #include <stdlib.h>
 #include <unistd.h>
+#include <xf86drm.h>
 
 WINE_DEFAULT_DEBUG_CHANNEL(waylanddrv);
 
@@ -115,9 +116,29 @@ static int wayland_gbm_get_drm_fd(const char *sysname, const char *desc)
 
 #endif
 
+static char *get_compositor_render_node(void)
+{
+    struct wayland *wayland = wayland_process_acquire();
+    char *compositor_render_node = NULL;
+    drmDevicePtr dev_ptr;
+
+    if (drmGetDeviceFromDevId(wayland->dmabuf.feedback.main_device, 0, &dev_ptr) < 0)
+        goto out;
+
+    if (dev_ptr->available_nodes & (1 << DRM_NODE_RENDER))
+        compositor_render_node = strdup(dev_ptr->nodes[DRM_NODE_RENDER]);
+
+    drmFreeDevice(&dev_ptr);
+
+out:
+    wayland_process_release();
+    return compositor_render_node;
+}
+
 static void wayland_gbm_init_once(void)
 {
     int drm_fd = -1;
+    char *compositor_render_node = get_compositor_render_node();
     const char *desc;
 
     if (option_drm_device)
@@ -129,6 +150,15 @@ static void wayland_gbm_init_once(void)
             WARN("Failed to open device from DRMDevice driver option\n");
     }
 
+    if (drm_fd < 0 && compositor_render_node)
+    {
+        drm_fd = open(compositor_render_node, O_RDWR);
+        TRACE("Trying to open drm device (from compositor render node) %s => fd=%d\n",
+              compositor_render_node, drm_fd);
+        if (drm_fd < 0)
+            WARN("Failed to open drm device that compositor is using\n");
+    }
+
     if (drm_fd < 0)
     {
         desc = "random render node";
@@ -163,6 +193,8 @@ static void wayland_gbm_init_once(void)
             WARN("Failed to open default primary node\n");
     }
 
+    free(compositor_render_node);
+
     if (drm_fd < 0)
     {
         ERR("Failed to find a suitable drm device\n");
-- 
2.36.1

