From 3d734b1a889f9dc9a2d93c62a713fe61e5d7b8d3 Mon Sep 17 00:00:00 2001
From: Alexandros Frantzis <alexandros.frantzis@collabora.com>
Date: Thu, 30 Sep 2021 11:23:00 +0300
Subject: [PATCH 110/170] winewayland.drv: Update GL drawable on surface
 changes.

When the Wayland surface for a window changes, also update
any associated GL drawable.

Signed-off-by: Alexandros Frantzis <alexandros.frantzis@collabora.com>
---
 dlls/winewayland.drv/opengl.c     | 24 ++++++++++++++++++++++++
 dlls/winewayland.drv/waylanddrv.h |  6 ++++++
 dlls/winewayland.drv/window.c     |  7 ++++++-
 3 files changed, 36 insertions(+), 1 deletion(-)

diff --git a/dlls/winewayland.drv/opengl.c b/dlls/winewayland.drv/opengl.c
index a4e51063dd0..63c6146d1dd 100644
--- a/dlls/winewayland.drv/opengl.c
+++ b/dlls/winewayland.drv/opengl.c
@@ -1609,6 +1609,26 @@ struct opengl_funcs *WAYLAND_wine_get_wgl_driver(UINT version)
     return &egl_funcs;
 }
 
+/***********************************************************************
+ *		wayland_update_gl_drawable_surface
+ */
+void wayland_update_gl_drawable_surface(HWND hwnd, struct wayland_surface *wayland_surface)
+{
+    struct wayland_gl_drawable *gl;
+
+    if ((gl = wayland_gl_drawable_get(hwnd)))
+    {
+        if (gl->wayland_surface)
+            wayland_surface_unref_glvk(gl->wayland_surface);
+
+        gl->wayland_surface = wayland_surface;
+        if (gl->wayland_surface)
+            wayland_surface_create_or_ref_glvk(gl->wayland_surface);
+
+        wayland_gl_drawable_release(gl);
+    }
+}
+
 #else /* No GL */
 
 struct opengl_funcs *WAYLAND_wine_get_wgl_driver(UINT version)
@@ -1617,4 +1637,8 @@ struct opengl_funcs *WAYLAND_wine_get_wgl_driver(UINT version)
     return NULL;
 }
 
+void wayland_update_gl_drawable_surface(HWND hwnd, struct wayland_surface *wayland_surface)
+{
+}
+
 #endif
diff --git a/dlls/winewayland.drv/waylanddrv.h b/dlls/winewayland.drv/waylanddrv.h
index 2d64d19c5a7..e578e085b8e 100644
--- a/dlls/winewayland.drv/waylanddrv.h
+++ b/dlls/winewayland.drv/waylanddrv.h
@@ -531,6 +531,12 @@ void wayland_set_cursor_if_current_invalid(HCURSOR hcursor) DECLSPEC_HIDDEN;
 
 BOOL wayland_gbm_init(void) DECLSPEC_HIDDEN;
 
+/**********************************************************************
+ *          OpenGL support
+ */
+
+void wayland_update_gl_drawable_surface(HWND hwnd, struct wayland_surface *wayland_surface) DECLSPEC_HIDDEN;
+
 /**********************************************************************
  *          Registry helpers
  */
diff --git a/dlls/winewayland.drv/window.c b/dlls/winewayland.drv/window.c
index b86faa2782f..484079b6437 100644
--- a/dlls/winewayland.drv/window.c
+++ b/dlls/winewayland.drv/window.c
@@ -557,7 +557,10 @@ static void wayland_win_data_update_wayland_surface(struct wayland_win_data *dat
             wl_list_for_each(child, &data->wayland_surface->child_list, link)
             {
                 struct wayland_win_data *child_data;
-                if ((child_data = wayland_win_data_get(child->hwnd)))
+                /* Don't handle glvk subsurfaces here, they are updated specially
+                 * below. */
+                if (child != data->wayland_surface->glvk &&
+                    (child_data = wayland_win_data_get(child->hwnd)))
                 {
                     child_data->wayland_surface_needs_update = TRUE;
                     wayland_win_data_release(child_data);
@@ -569,6 +572,8 @@ static void wayland_win_data_update_wayland_surface(struct wayland_win_data *dat
         }
 
         data->wayland_surface = surface;
+
+        wayland_update_gl_drawable_surface(data->hwnd, data->wayland_surface);
     }
 }
 
-- 
2.36.1

